{"version":3,"sources":["components/Navbar.js","pages/Home.js","api/api.js","components/Loader.js","components/ProductCard.js","components/ErrorLoadData.js","components/ProductListCategory.js","components/ProductCategoryFull.js","components/ProductCategoryMin.js","pages/Products.js","pages/Clients.js","pages/Contact.js","components/NotMatch.js","App.js","serviceWorker.js","index.js"],"names":["menuItems","Navbar","state","this","setLocation","props","location","nextProps","currentMenu","pathname","find","menu","toLocaleLowerCase","includes","setState","active","menuItem","toLowerCase","_this2","react_default","a","createElement","className","map","react_router_dom","key","concat","to","React","Component","withRouter","Home","simulateNetworkLatency","ms","min","arguments","length","undefined","max","Math","floor","random","randomNumber","Promise","resolve","setTimeout","_callee","category","fakeresponse","filteredData","regenerator_default","wrap","_context","prev","next","Object","objectSpread","Data","products","filter","product","categories","hiddenproducts","shownproducts","abrupt","stop","api","get","callFakeApi","Loader","ProductCard","es","id","title","name","subtitle","join","brand","size","src","photo","alt","description","stock","Intl","NumberFormat","style","currency","format","price","ErrorLoadData","Fragment","PageStatus","isLoading","isCategoryInvalid","isError","isLoaded","ProductListCategory","data","pagestatus","fetchData","_this","sent","sort","b","localeCompare","t0","console","log","setCategory","match","params","validateLocation","components_Loader","components_ErrorLoadData","components_ProductCard","ProductCategoryFull","ProductCategoryMin","Products","components_ProductCategoryFull","components_ProductCategoryMin","components_ProductListCategory","Clients","Contact","NotMatch","App","components_Navbar","react_router","exact","path","component","Boolean","window","hostname","WebFontLoader","load","google","families","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10f31a71.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport './styles/Navbar.css'\r\n\r\nconst menuItems = [\r\n    'HOME',\r\n    'PRODUCTS',\r\n    'CLIENTS',\r\n    'CONTACT'\r\n ];\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    state = {}\r\n\r\n    componentDidMount(){\r\n        this.setLocation(this.props.location)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setLocation(nextProps.location)\r\n    }\r\n\r\n    setLocation(location) {\r\n        let currentMenu;\r\n        if(location.pathname === '/') {\r\n            currentMenu = 'HOME'\r\n        }\r\n        else {\r\n            currentMenu = menuItems.find(menu => location.pathname.toLocaleLowerCase().includes(menu.toLocaleLowerCase()))\r\n        }\r\n\r\n        this.setState({ active: currentMenu ? currentMenu.toLocaleLowerCase() : ''})\r\n    }\r\n\r\n    _handleClick(menuItem) { \r\n        this.setState({ active: menuItem.toLowerCase() })\r\n    }\r\n\r\n    render() {\r\n            return (\r\n                <header className='main-bar'>\r\n                    <nav className='menu'>\r\n                        {menuItems.map(menuItem => \r\n                            <Link key={menuItem}\r\n                                className={`menu-item ${this.state.active === menuItem.toLowerCase() ? 'menu-item-selected' : {}}`}\r\n                                to={`/${menuItem.toLowerCase()}`}\r\n                            >{menuItem}</Link>\r\n                        )}\r\n                    </nav>\r\n                </header>\r\n            )\r\n        }\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n","import React from 'react'\r\n\r\nfunction Home() {\r\n    return(\r\n        <h1>Home</h1>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Data from './MockData.json'\r\nimport axios from 'axios';\r\n\r\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\nconst randomNumber = (min = 0, max = 1) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\r\n  delay(randomNumber(min, max));\r\n\r\nasync function callFakeApi(category) {\r\n    await simulateNetworkLatency()\r\n\r\n    let fakeresponse = {...Data};\r\n\r\n    let filteredData\r\n    if(category === 'all') {\r\n        filteredData = fakeresponse.products\r\n    } else {\r\n        filteredData = fakeresponse.products.filter(product => product.categories.includes(category))\r\n    }\r\n\r\n    fakeresponse.category = category\r\n    fakeresponse.hiddenproducts = fakeresponse.products.length - filteredData.length\r\n    fakeresponse.shownproducts = filteredData.length\r\n    fakeresponse.products = filteredData\r\n\r\n    return fakeresponse\r\n}\r\n\r\nconst url = 'http://localhost:64143/api/'\r\n\r\nasync function callApi(category) {\r\n    let response = await axios.get(`${url}/Products?category=${category}`)\r\n    return response.data\r\n}\r\n\r\nconst api = {\r\n    products: {\r\n        get(category) {\r\n            return callFakeApi(category) // Uncomment this line to Call fake API to test app withou backend\r\n            //return callApi(category)\r\n        }\r\n    }\r\n}\r\n\r\nexport default api\r\n","import React from 'react'\r\n\r\nimport './styles/Loader.css'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"Loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Grid, Cell, Card, CardTitle, CardText } from 'react-md';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles/ProductCard.css'\r\n\r\nfunction ProductCard(props) {\r\n    return (\r\n        <Card className='md-block-centered' key={props.product.id}>\r\n            <CardTitle title={props.product.name} subtitle={`${props.product.categories.join(', ')} - ${props.product.brand}`} />\r\n            <CardText>\r\n                <Grid>\r\n                    <Cell size={4} className=\"card-image-container\">\r\n                        <img className=\"card-image\" src={props.product.photo} alt={props.product.name}/>\r\n                    </Cell>\r\n                    <Cell size={8}>\r\n                        <div className='product-card-detail-info'>\r\n                            <p>{props.product.description}</p>\r\n                            <div><b>Stock:</b> {props.product.stock}</div>\r\n                            <div><b>Price:</b> {new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(props.product.price)}</div>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </CardText>\r\n        </Card>\r\n    )\r\n}\r\n\r\nProductCard.propTypes = {\r\n    product: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react'\r\n\r\nfunction ErrorLoadData() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Ooops!</h1><h2>Wooops! Something happened. Please try again or see the console.</h2>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ErrorLoadData\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport './styles/ProductListCategory.css'\r\nimport api from '../api/api'\r\n\r\nimport Loader from './Loader'\r\nimport ProductCard from './ProductCard'\r\nimport ErrorLoadData from './ErrorLoadData'\r\n\r\nconst PageStatus = {\r\n    isLoading: 'isLoading',\r\n    isCategoryInvalid: 'isCategoryInvalid',\r\n    isError: 'isError',\r\n    isLoaded: 'isLoaded'\r\n  }\r\n\r\nclass ProductListCategory extends React.Component {\r\n    state = {category: null, data: {}, pagestatus: PageStatus.isLoading}\r\n\r\n    componentDidMount() {\r\n        this.setCategory(this.props.match.params.category)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setCategory(nextProps.match.params.category)\r\n    }\r\n\r\n    setCategory(location) {\r\n        if(!location) {\r\n            location = 'all'\r\n        }\r\n\r\n        this.validateLocation(location.toLowerCase())\r\n    }\r\n\r\n    validateLocation(category) {\r\n        switch (category) {\r\n            case 'all':\r\n            case 'tech':\r\n            case 'services':\r\n            case 'office':\r\n                this.setState({category})\r\n                this.fetchData(category)\r\n                break;\r\n        \r\n            default:\r\n                this.setState({category: null, data: {}, pagestatus: PageStatus.isCategoryInvalid})\r\n                break;\r\n        }\r\n    }\r\n\r\n    fetchData = async (category) => {\r\n        let data = {}\r\n        this.setState({data, pagestatus: PageStatus.isLoading})\r\n\r\n        try {\r\n            data = await api.products.get(category)\r\n\r\n            data.products.sort((a, b) => {\r\n                return a.name.localeCompare(b.name)\r\n            })\r\n\r\n            this.setState({data, pagestatus: PageStatus.isLoaded})\r\n        } catch(ex) {\r\n            console.log(ex);\r\n            this.setState({data: { products: [] }, pagestatus: PageStatus.isError})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.pagestatus === PageStatus.isLoading) {\r\n            return (\r\n              <div className='loader'>\r\n                <Loader/>\r\n              </div>\r\n            )\r\n        }\r\n\r\n        if(this.state.pagestatus === PageStatus.isError) {\r\n            return (\r\n              <ErrorLoadData/>\r\n            )\r\n        }\r\n\r\n        if(this.state.pagestatus === PageStatus.isCategoryInvalid) {\r\n            return (\r\n              <div className='invalid-category'>\r\n                <h1>Ooops!</h1>\r\n                <h2>The Category is invalid, please check your url</h2>\r\n              </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <section className='product-list-head'>\r\n                    Showing <b>{this.state.data.shownproducts}</b> products\r\n                    {this.state.category !== 'all' && <React.Fragment> - hidden<b> {this.state.data.hiddenproducts} </b></React.Fragment>}\r\n                </section>\r\n                <div className=\"product-list\">\r\n                    {this.state.data.products.map(product => {\r\n                        return (\r\n                            <section key={product.id} className=\"product-list-item\">\r\n                                <ProductCard product={product}/>\r\n                            </section>\r\n                        )\r\n                    })\r\n\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductListCategory)\r\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport './styles/ProductCategoryFull.css'\r\n\r\nclass ProductCategoryFull extends React.Component {\r\n\r\n    state = {}\r\n\r\n    componentDidMount() {\r\n        this.setLocation(this.props.match.params.category)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setLocation(nextProps.match.params.category)\r\n    }\r\n\r\n    setLocation(location) {\r\n        if(!location) {\r\n            location = 'all'\r\n        }\r\n\r\n        this.setState({category: location.toLowerCase()})\r\n    }\r\n\r\n    render() { return (\r\n        <React.Fragment>\r\n            <div className='product-categories-head'>\r\n                <div className='product-categories-tittle'>Categories</div>\r\n                <Link to='/products/all'\r\n                    className={`product-categories-item selectable-item ${this.state.category === 'all' ? 'product-categories-item-selected' : ''}`}\r\n                >\r\n                    <i className='material-icons product-categories-item-icon' id='scr'>list</i>\r\n                    <span>All</span>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <Link to='/products/tech'\r\n                className={`product-categories-item selectable-item ${this.state.category === 'tech' ? 'product-categories-item-selected' : ''}`}>\r\n                    <i className='material-icons product-categories-item-icon' id='scr'>laptop</i>\r\n                    <span>Tech</span>\r\n                </Link>\r\n                <Link to='/products/services'\r\n                className={`product-categories-item selectable-item ${this.state.category === 'services' ? 'product-categories-item-selected' : ''}`}>\r\n                    <i className='material-icons product-categories-item-icon' id='scr'>build</i>\r\n                    <span>Services</span>\r\n                </Link>\r\n                <Link to='/products/office'\r\n                className={`product-categories-item selectable-item ${this.state.category === 'office' ? 'product-categories-item-selected' : ''}`}>\r\n                    <i className='material-icons product-categories-item-icon' id='scr'>folder</i>\r\n                    <span>Office</span>\r\n                </Link>\r\n            </div>\r\n        </React.Fragment>\r\n    )}\r\n}\r\n\r\nexport default withRouter(ProductCategoryFull)\r\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport './styles/ProductCategoryMin.css'\r\n\r\nclass ProductCategoryMin extends React.Component {\r\n\r\n    state = {}\r\n\r\n    componentDidMount() {\r\n        this.setLocation(this.props.match.params.category)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setLocation(nextProps.match.params.category)\r\n    }\r\n\r\n    setLocation(location) {\r\n        if(!location) {\r\n            location = 'all'\r\n        }\r\n\r\n        this.setState({category: location.toLowerCase()})\r\n    }\r\n\r\n    render() { return (\r\n        <div className='product-categories-min-main'>\r\n            <div className='product-categories-min-menu'>\r\n                <Link to='/products/all'\r\n                    className={`product-categories-min-menu-item selectable-item ${this.state.category === 'all' ? 'product-categories-min-menu-item-selected' : ''}`} >\r\n                    <i className='material-icons product-categories-min-menu-icon' id='scr'>list</i>\r\n                </Link>\r\n                <Link to='/products/tech'\r\n                    className={`product-categories-min-menu-item selectable-item ${this.state.category === 'tech' ? 'product-categories-min-menu-item-selected' : ''}`}>\r\n                    <i className='material-icons product-categories-min-menu-icon' id='scr'>laptop</i>\r\n                </Link>\r\n                <Link to='/products/services'\r\n                    className={`product-categories-min-menu-item selectable-item ${this.state.category === 'services' ? 'product-categories-min-menu-item-selected' : ''}`}>\r\n                    <i className='material-icons product-categories-min-menu-icon' id='scr'>build</i>\r\n                </Link>\r\n                <Link to='/products/office'\r\n                    className={`product-categories-min-menu-item selectable-item ${this.state.category === 'office' ? 'product-categories-min-menu-item-selected' : ''}`}>\r\n                    <i className='material-icons product-categories-min-menu-icon' id='scr'>folder</i>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default withRouter(ProductCategoryMin)\r\n","import React from 'react'\r\n\r\nimport './styles/Product.css'\r\n\r\nimport ProductListCategory from '../components/ProductListCategory'\r\nimport ProductCategoryFull from '../components/ProductCategoryFull'\r\nimport ProductCategoryMin from '../components/ProductCategoryMin'\r\n\r\nfunction Products() {\r\n\r\n    return(\r\n        <div className='product'>\r\n            <aside className='product-categories-full'>\r\n                <ProductCategoryFull/>\r\n            </aside>\r\n            <aside className='product-categories-min'>\r\n                <ProductCategoryMin/>\r\n            </aside>\r\n            <article className='product-category-list'>\r\n                <ProductListCategory/>\r\n            </article>              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import React from 'react'\r\n\r\nfunction Clients() {\r\n    return(\r\n        <h1>Clients</h1>\r\n    )\r\n}\r\n\r\nexport default Clients\r\n","import React from 'react'\r\n\r\nfunction Contact() {\r\n    return(\r\n        <h1>Contact</h1>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\n\r\nfunction NotMatch() {\r\n    return(\r\n        <h1>Opps! The url doesn't match</h1>\r\n    )\r\n}\r\n\r\nexport default NotMatch\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Products from './pages/Products';\nimport Clients from './pages/Clients';\nimport Contact from './pages/Contact';\nimport NotMatch from './components/NotMatch';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Navbar/>\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/home' component={Home} />\n                <Route exact path='/products' component={Products} />\n                <Route path='/products/:category' component={Products} />\n                <Route path='/clients' component={Clients} />\n                <Route path='/contact' component={Contact} />\n                <Route path='*' component={NotMatch}/>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport WebFontLoader from 'webfontloader';\n\nWebFontLoader.load({\n    google: {\n        families: ['Roboto:300,400,500,700', 'Material Icons'],\n    },\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}